{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Documents/myLearning/portfolio/src/components/portfolio/Portfoliio.jsx\",\n  _s = $RefreshSig$();\n// src/components/Portfolio/Portfolio.jsx\nimport React, { useState, useEffect } from \"react\";\nimport \"./portfolio.css\";\nimport pb from \"../../pocketbase\"; // Adjust the path if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Portfolio = () => {\n  _s();\n  const [menuItems, setMenuItems] = useState([]);\n  const [filteredItems, setFilteredItems] = useState([]);\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch portfolio data\n        const works = await pb.collection(\"WorkMenu\").getFullList();\n        setMenuItems(works);\n        setFilteredItems(works);\n\n        // Fetch categories\n        const cats = await pb.collection(\"WorkCategory\").getFullList();\n        const catNames = cats.map(c => c.Name);\n        setCategories([\"Everything\", ...catNames]);\n      } catch (error) {\n        console.error(\"Error fetching portfolio data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const filterItem = categoryItem => {\n    if (categoryItem === \"Everything\") {\n      setFilteredItems(menuItems);\n    } else {\n      const updatedItems = menuItems.filter(item => item.category === categoryItem);\n      setFilteredItems(updatedItems);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"work container section\",\n    id: \"work\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section__title\",\n      children: \"Recent Works\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work__filters\",\n      children: categories.map((cat, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"work__item\",\n        onClick: () => filterItem(cat),\n        children: cat\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work__container grid\",\n      children: filteredItems.map(elem => {\n        const {\n          id,\n          title,\n          category,\n          image\n        } = elem;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"work__card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"work__thumbnail\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: pb.files.getURL(elem, elem.image),\n              alt: title,\n              className: \"work__img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"work__mask\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"work__category\",\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"work__title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            className: \"work__button\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon-link work__button-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Portfolio, \"anvrFMN3qE/Hr/jZ6tF8kqbSR5M=\");\n_c = Portfolio;\nexport default Portfolio;\nvar _c;\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"names":["React","useState","useEffect","pb","jsxDEV","_jsxDEV","Portfolio","_s","menuItems","setMenuItems","filteredItems","setFilteredItems","categories","setCategories","fetchData","works","collection","getFullList","cats","catNames","map","c","Name","error","console","filterItem","categoryItem","updatedItems","filter","item","category","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","cat","index","onClick","elem","title","image","src","files","getURL","alt","href","_c","$RefreshReg$"],"sources":["/home/ubuntu/Documents/myLearning/portfolio/src/components/portfolio/Portfoliio.jsx"],"sourcesContent":["// src/components/Portfolio/Portfolio.jsx\nimport React, { useState, useEffect } from \"react\";\nimport \"./portfolio.css\";\nimport pb from \"../../pocketbase\"; // Adjust the path if needed\n\nconst Portfolio = () => {\n  const [menuItems, setMenuItems] = useState([]);\n  const [filteredItems, setFilteredItems] = useState([]);\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch portfolio data\n        const works = await pb.collection(\"WorkMenu\").getFullList();\n        setMenuItems(works);\n        setFilteredItems(works);\n\n        // Fetch categories\n        const cats = await pb.collection(\"WorkCategory\").getFullList();\n        const catNames = cats.map((c) => c.Name);\n        setCategories([\"Everything\", ...catNames]);\n      } catch (error) {\n        console.error(\"Error fetching portfolio data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const filterItem = (categoryItem) => {\n    if (categoryItem === \"Everything\") {\n      setFilteredItems(menuItems);\n    } else {\n      const updatedItems = menuItems.filter(\n        (item) => item.category === categoryItem\n      );\n      setFilteredItems(updatedItems);\n    }\n  };\n\n  return (\n    <section className=\"work container section\" id=\"work\">\n      <h2 className=\"section__title\">Recent Works</h2>\n\n      <div className=\"work__filters\">\n        {categories.map((cat, index) => (\n          <span\n            className=\"work__item\"\n            key={index}\n            onClick={() => filterItem(cat)}\n          >\n            {cat}\n          </span>\n        ))}\n      </div>\n\n      <div className=\"work__container grid\">\n        {filteredItems.map((elem) => {\n          const { id, title, category, image } = elem;\n          return (\n            <div className=\"work__card\" key={id}>\n              <div className=\"work__thumbnail\">\n                <img\n                  src={pb.files.getURL(elem, elem.image)}\n                  alt={title}\n                  className=\"work__img\"\n                />\n                <div className=\"work__mask\"></div>\n              </div>\n\n              <span className=\"work__category\">{category}</span>\n              <h3 className=\"work__title\">{title}</h3>\n              <a href=\"#\" className=\"work__button\">\n                <i className=\"icon-link work__button-icon\"></i>\n              </a>\n            </div>\n          );\n        })}\n      </div>\n    </section>\n  );\n};\n\nexport default Portfolio;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}