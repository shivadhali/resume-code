{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Documents/myLearning/portfolio/src/components/services/Services.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport \"./services.css\";\nimport pb from '../../pocketbase';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Services = () => {\n  _s();\n  const [services, setServices] = useState([]);\n  useEffect(() => {\n    const fetchServices = async () => {\n      try {\n        const records = await pb.collection('ServiceData').getFullList();\n\n        // Append image URL to each record\n        const servicesWithUrls = records.map(record => ({\n          id: record.id,\n          title: record.title,\n          description: record.description,\n          image: pb.files.getURL(record, record.image),\n          background: record.background\n        }));\n        setServices(servicesWithUrls);\n      } catch (error) {\n        console.error('Error fetching ServiceData:', error);\n      }\n    };\n    fetchServices();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"services container section\",\n    id: \"services\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section__title\",\n      children: \"Services\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"services__container grid\",\n      children: services.map(({\n        id,\n        image,\n        title,\n        description,\n        background\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"services__card\",\n        style: {\n          backgroundColor: {\n            background\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: title,\n          className: \"services__img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"services__title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"services__description\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Services, \"6zIv7VYIWrxuvR7GDZce08FfVgw=\");\n_c = Services;\nexport default Services;\nvar _c;\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"names":["React","pb","useState","useEffect","jsxDEV","_jsxDEV","Services","_s","services","setServices","fetchServices","records","collection","getFullList","servicesWithUrls","map","record","id","title","description","image","files","getURL","background","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","src","alt","_c","$RefreshReg$"],"sources":["/home/ubuntu/Documents/myLearning/portfolio/src/components/services/Services.jsx"],"sourcesContent":["import React from 'react';\nimport \"./services.css\";\n\nimport pb from '../../pocketbase'; \nimport { useState, useEffect } from 'react';\n\nconst Services = () => {\n\n  const [services, setServices] = useState([]);\n\n  useEffect(() => {\n    const fetchServices = async () => {\n      try {\n        const records = await pb.collection('ServiceData').getFullList();\n\n        // Append image URL to each record\n        const servicesWithUrls = records.map((record) => ({\n          id: record.id,\n          title: record.title,\n          description: record.description,\n          image: pb.files.getURL(record, record.image),\n          background: record.background,\n        }));\n\n        setServices(servicesWithUrls);\n      } catch (error) {\n        console.error('Error fetching ServiceData:', error);\n      }\n    };\n\n    fetchServices();\n  }, []);\n\n\n  return (\n    <section className=\"services container section\" id=\"services\">\n      <h2 className=\"section__title\">Services</h2>\n      <div className=\"services__container grid\">\n\n        {services.map(({ id, image, title, description, background }) => (\n          <div className=\"services__card\" key={id} style={{backgroundColor: {background}}}>\n            <img src={image} alt={title} className=\"services__img\" />\n            <h3 className=\"services__title\">{title}</h3>\n            <p className=\"services__description\">{description}</p>\n          </div>\n        ))}\n      </div>\n    </section>\n  )\n}\n\nexport default Services"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAEvB,OAAOC,EAAE,MAAM,kBAAkB;AACjC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMO,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMV,EAAE,CAACW,UAAU,CAAC,aAAa,CAAC,CAACC,WAAW,CAAC,CAAC;;QAEhE;QACA,MAAMC,gBAAgB,GAAGH,OAAO,CAACI,GAAG,CAAEC,MAAM,KAAM;UAChDC,EAAE,EAAED,MAAM,CAACC,EAAE;UACbC,KAAK,EAAEF,MAAM,CAACE,KAAK;UACnBC,WAAW,EAAEH,MAAM,CAACG,WAAW;UAC/BC,KAAK,EAAEnB,EAAE,CAACoB,KAAK,CAACC,MAAM,CAACN,MAAM,EAAEA,MAAM,CAACI,KAAK,CAAC;UAC5CG,UAAU,EAAEP,MAAM,CAACO;QACrB,CAAC,CAAC,CAAC;QAEHd,WAAW,CAACK,gBAAgB,CAAC;MAC/B,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDd,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEL,OAAA;IAASqB,SAAS,EAAC,4BAA4B;IAACT,EAAE,EAAC,UAAU;IAAAU,QAAA,gBAC3DtB,OAAA;MAAIqB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5C1B,OAAA;MAAKqB,SAAS,EAAC,0BAA0B;MAAAC,QAAA,EAEtCnB,QAAQ,CAACO,GAAG,CAAC,CAAC;QAAEE,EAAE;QAAEG,KAAK;QAAEF,KAAK;QAAEC,WAAW;QAAEI;MAAW,CAAC,kBAC1DlB,OAAA;QAAKqB,SAAS,EAAC,gBAAgB;QAAUM,KAAK,EAAE;UAACC,eAAe,EAAE;YAACV;UAAU;QAAC,CAAE;QAAAI,QAAA,gBAC9EtB,OAAA;UAAK6B,GAAG,EAAEd,KAAM;UAACe,GAAG,EAAEjB,KAAM;UAACQ,SAAS,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzD1B,OAAA;UAAIqB,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAET;QAAK;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5C1B,OAAA;UAAGqB,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAER;QAAW;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHnBd,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIlC,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAAAxB,EAAA,CA3CKD,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AA6Cd,eAAeA,QAAQ;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}