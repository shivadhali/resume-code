{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Documents/myLearning/portfolio/src/components/portfolio/Portfoliio.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./portfolio.css\";\nimport pb from \"../../pocketbase\"; // Adjust the path if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Portfoliio = () => {\n  _s();\n  const [menuItems, setMenuItems] = useState([]);\n  const [filteredItems, setFilteredItems] = useState([]);\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const menuRecords = await pb.collection(\"WorkMenu\").getFullList();\n        const categoryRecords = await pb.collection(\"WorkCategory\").getFullList();\n        setMenuItems(menuRecords);\n        setFilteredItems(menuRecords);\n        setCategories(categoryRecords);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const filterItem = categoryItem => {\n    const updatedItems = menuItems.filter(item => item.category === categoryItem);\n    setFilteredItems(updatedItems);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"work container section\",\n    id: \"work\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section__title\",\n      children: \"Recent Works\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work__filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"work__item\",\n        onClick: () => setFilteredItems(menuItems),\n        children: \"Everything\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"work__item\",\n        onClick: () => filterItem(cat.Name),\n        children: cat.Name\n      }, cat.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work__container grid\",\n      children: filteredItems.map(elem => {\n        const {\n          id,\n          title,\n          category,\n          image\n        } = elem;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"work__card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"work__thumbnail\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: pb.files.getURL(elem, elem.image) // Only if `image` is a file field\n              ,\n              alt: \"\",\n              className: \"work__img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"work__mask\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"work__category\",\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"work__title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            className: \"work__button\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon-link work__button-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Portfoliio, \"anvrFMN3qE/Hr/jZ6tF8kqbSR5M=\");\n_c = Portfoliio;\nexport default Portfoliio;\nvar _c;\n$RefreshReg$(_c, \"Portfoliio\");","map":{"version":3,"names":["React","useState","useEffect","pb","jsxDEV","_jsxDEV","Portfoliio","_s","menuItems","setMenuItems","filteredItems","setFilteredItems","categories","setCategories","fetchData","menuRecords","collection","getFullList","categoryRecords","error","console","filterItem","categoryItem","updatedItems","filter","item","category","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","cat","Name","elem","title","image","src","files","getURL","alt","href","_c","$RefreshReg$"],"sources":["/home/ubuntu/Documents/myLearning/portfolio/src/components/portfolio/Portfoliio.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./portfolio.css\";\nimport pb from \"../../pocketbase\"; // Adjust the path if needed\n\nconst Portfoliio = () => {\n  const [menuItems, setMenuItems] = useState([]);\n  const [filteredItems, setFilteredItems] = useState([]);\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const menuRecords = await pb.collection(\"WorkMenu\").getFullList();\n        const categoryRecords = await pb.collection(\"WorkCategory\").getFullList();\n\n        setMenuItems(menuRecords);\n        setFilteredItems(menuRecords);\n        setCategories(categoryRecords);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const filterItem = (categoryItem) => {\n    const updatedItems = menuItems.filter((item) => item.category === categoryItem);\n    setFilteredItems(updatedItems);\n  };\n\n  return (\n    <section className=\"work container section\" id=\"work\">\n      <h2 className=\"section__title\">Recent Works</h2>\n\n      <div className=\"work__filters\">\n        <span className=\"work__item\" onClick={() => setFilteredItems(menuItems)}>\n          Everything\n        </span>\n\n        {categories.map((cat) => (\n          <span\n            className=\"work__item\"\n            key={cat.id}\n            onClick={() => filterItem(cat.Name)}\n          >\n            {cat.Name}\n          </span>\n        ))}\n      </div>\n\n      <div className=\"work__container grid\">\n        {filteredItems.map((elem) => {\n          const { id, title, category, image } = elem;\n          return (\n            <div className=\"work__card\" key={id}>\n              <div className=\"work__thumbnail\">\n                <img\n                  src={pb.files.getURL(elem, elem.image)} // Only if `image` is a file field\n                  alt=\"\"\n                  className=\"work__img\"\n                />\n                <div className=\"work__mask\"></div>\n              </div>\n\n              <span className=\"work__category\">{category}</span>\n              <h3 className=\"work__title\">{title}</h3>\n              <a href=\"#\" className=\"work__button\">\n                <i className=\"icon-link work__button-icon\"></i>\n              </a>\n            </div>\n          );\n        })}\n      </div>\n    </section>\n  );\n};\n\nexport default Portfoliio;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}