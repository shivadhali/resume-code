{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Documents/myLearning/portfolio/src/components/services/Services.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport \"./services.css\";\nimport Image1 from \"../../assets/service-1.svg\";\nimport Image2 from \"../../assets/service-2.svg\";\nimport Image3 from \"../../assets/service-3.svg\";\nimport pb from '../../pocketbase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  id: 1,\n  image: Image1,\n  title: \"UI/UX design\",\n  description: \"Lorem ipsum dolor sit amet consectetuer adipiscing elit         aenean commodo ligula eget.\"\n}, {\n  id: 2,\n  image: Image2,\n  title: \"Web Development\",\n  description: \"Lorem ipsum dolor sit amet consectetuer adipiscing elit         aenean commodo ligula eget.\"\n}, {\n  id: 3,\n  image: Image3,\n  title: \"Photography\",\n  description: \"Lorem ipsum dolor sit amet consectetuer adipiscing elit         aenean commodo ligula eget.\"\n}];\nconst Services = () => {\n  _s();\n  const [services, setServices] = useState([]);\n  useEffect(() => {\n    const fetchServices = async () => {\n      try {\n        const records = await pb.collection('ServiceData').getFullList();\n\n        // Append image URL to each record\n        const servicesWithUrls = records.map(record => ({\n          id: record.id,\n          title: record.title,\n          description: record.description,\n          image: pb.files.getURL(record, record.image)\n        }));\n        setServices(servicesWithUrls);\n      } catch (error) {\n        console.error('Error fetching ServiceData:', error);\n      }\n    };\n    fetchServices();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"services container section\",\n    id: \"services\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section__title\",\n      children: \"Services\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"services__container grid\",\n      children: [services.map(({\n        id,\n        image,\n        title,\n        description\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"services__card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: title,\n          className: \"services__img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"services__title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"services__description\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)), data.map(({\n        id,\n        image,\n        title,\n        description\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"services__card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: \"\",\n            className: \"services__img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"services__title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"services__description\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Services, \"6zIv7VYIWrxuvR7GDZce08FfVgw=\");\n_c = Services;\nexport default Services;\nvar _c;\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"names":["React","Image1","Image2","Image3","pb","jsxDEV","_jsxDEV","data","id","image","title","description","Services","_s","services","setServices","useState","useEffect","fetchServices","records","collection","getFullList","servicesWithUrls","map","record","files","getURL","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/home/ubuntu/Documents/myLearning/portfolio/src/components/services/Services.jsx"],"sourcesContent":["import React from 'react';\nimport \"./services.css\";\nimport Image1 from \"../../assets/service-1.svg\";\nimport Image2 from \"../../assets/service-2.svg\";\nimport Image3 from \"../../assets/service-3.svg\";\n\nimport pb from '../../pocketbase'; \n\nconst data = [\n  {\n    id: 1,\n    image: Image1,\n    title: \"UI/UX design\",\n    description:\n      \"Lorem ipsum dolor sit amet consectetuer adipiscing elit         aenean commodo ligula eget.\",\n  },\n  {\n    id: 2,\n    image: Image2,\n    title: \"Web Development\",\n    description:\n      \"Lorem ipsum dolor sit amet consectetuer adipiscing elit         aenean commodo ligula eget.\",\n  },\n  {\n    id: 3,\n    image: Image3,\n    title: \"Photography\",\n    description:\n      \"Lorem ipsum dolor sit amet consectetuer adipiscing elit         aenean commodo ligula eget.\",\n  },\n];\n\n\nconst Services = () => {\n\n  const [services, setServices] = useState([]);\n\n  useEffect(() => {\n    const fetchServices = async () => {\n      try {\n        const records = await pb.collection('ServiceData').getFullList();\n\n        // Append image URL to each record\n        const servicesWithUrls = records.map((record) => ({\n          id: record.id,\n          title: record.title,\n          description: record.description,\n          image: pb.files.getURL(record, record.image),\n        }));\n\n        setServices(servicesWithUrls);\n      } catch (error) {\n        console.error('Error fetching ServiceData:', error);\n      }\n    };\n\n    fetchServices();\n  }, []);\n\n\n  return (\n    <section className=\"services container section\" id=\"services\">\n      <h2 className=\"section__title\">Services</h2>\n      <div className=\"services__container grid\">\n\n        {services.map(({ id, image, title, description }) => (\n          <div className=\"services__card\" key={id}>\n            <img src={image} alt={title} className=\"services__img\" />\n            <h3 className=\"services__title\">{title}</h3>\n            <p className=\"services__description\">{description}</p>\n          </div>\n        ))}\n\n        {data.map(({id, image, title, description}) => {\n          return (\n            <div className=\"services__card\" key={id}>\n              <img src={image} alt=\"\" className=\"services__img\" />\n              <h3 className=\"services__title\">{title}</h3>\n              <p className=\"services__description\">{description}</p>\n            </div>\n          )\n        })}\n      </div>\n    </section>\n  )\n}\n\nexport default Services"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}